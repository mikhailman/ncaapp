-- create table if not exists employee
-- (
--     id       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--     name     VARCHAR(50) NOT NULL,
--     function VARCHAR(50) NOT NULL
-- --     org_id   BIGINT      NOT NULL,
-- --     FOREIGN KEY (org_id) REFERENCES organization (id) ON DELETE CASCADE
-- );
-- insert into employee(name, function)
-- values ('misha', 'mishin');
-- insert into employee(name, function)
-- values ('sasha', 'sashin');
-- insert into employee(name, function)
-- values ('kostya', 'kostin');
-- create table if not exists organization
-- (
--     id      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--     name    VARCHAR(50) NOT NULL,
--     adress  VARCHAR(50) NOT NULL,
--     empl_id BIGINT,
--     FOREIGN KEY (empl_id) REFERENCES employee (id)
-- );
-- insert into organization(name, adress, empl_id)
-- values ('roga', 'inf', '1');
-- insert into organization(name, adress, empl_id)
-- values ('kopyta', 'bla-bla', '2');
-- insert into organization(name, adress, empl_id)
-- values ('brosok', 'kobry', '3');
--
--


create table if not exists organization
(
    id      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name    VARCHAR(50) NOT NULL,
    address VARCHAR(50) NOT NULL
);
insert into organization(name, address)
values ('roga', 'inf');
insert into organization(name, address)
values ('kopyta', 'bla-bla');
insert into organization(name, address)
values ('brosok', 'kobry');

create table if not exists employee
(
    id       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name     VARCHAR(50) NOT NULL UNIQUE,
    function VARCHAR(50) NOT NULL,
    org_id   BIGINT NOT NULL,
    FOREIGN KEY (org_id) REFERENCES organization (id) ON DELETE CASCADE
);
insert into employee(name, function, org_id)
values ('misha', 'mishin', 1);
insert into employee(name, function, org_id)
values ('sasha', 'sashin', 2);
insert into employee(name, function, org_id)
values ('kostya', 'kostin', 3);

